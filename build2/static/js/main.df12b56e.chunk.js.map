{"version":3,"sources":["helpers/getFetch.js","hooks/useFetchAnime.js","hooks/useShowContent.js","components/feature/InfoCard.js","components/feature/AnimeItem.js","components/feature/FeatureAnimes.js","components/header/SearchInput.js","components/header/AbcChart.js","components/header/AnimeGenreItem.js","components/header/NavbarMenu.js","components/hero/Hero.js","components/top10/Top10Anime.js","AnimeApp.js","index.js"],"names":["MAIN_URL","myCredentials","randomPage","Math","floor","random","getSearchAnimes","anime","a","fetch","response","json","results","map","title","description","synopsis","img","image_url","type","episodes","url","animeSearch","getTopAnimes","topAnimeResponse","top","animeTop","id","mal_id","image","getSeasonAnimes","responseSeasonAnime","animesSeason","slice","animeData","score","genre","genres","getGenreAnimes","genreAnimes","repsTest","i","data","push","console","error","useFetchTopAnime","useState","topData","loading","state","setState","useEffect","then","useShowContent","initialState","showContent","setShowContent","toggleShowContent","InfoCard","className","src","alt","AnimeItem","shortName","onClick","ariaHideApp","overlayClassName","isOpen","open","FeatureAnimes","useFetchSeasonAnime","animeSeason","key","SearchInput","setAnime","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","animes","value","onChange","target","AbcChart","abc","String","fromCharCode","letter","AnimeGenreItem","genreData","mal_url","name","log","handleShowInfo","NavbarMenu","useFetchAnime","useFetchGenreAnime","randomBackground","Hero","href","Top10Anime","direction","index","effect","scrollPosition","AnimeApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.df12b56e.chunk.js","sourcesContent":["const MAIN_URL = 'https://jikan1.p.rapidapi.com/';\nconst API_KEY = 'ebf8bbd763msh2c1131faf74d8c1p183bb1jsncfee2231dc88';\nconst HOST = 'jikan1.p.rapidapi.com';\nconst myCredentials = {\n  \"method\": \"GET\",\n  \"headers\": {\n    \"x-rapidapi-key\": API_KEY,\n    \"x-rapidapi-host\": HOST\n  }\n} \nconst randomImage = Math.floor(Math.random() * 49 )\nconst randomPage = Math.floor(Math.random() * 5 ) + 1\n\nconst searchAnime = `search/anime?q=`;\nconst topAnimes = `top/anime/${randomPage}/upcoming`;\nconst top10Animes = `top/anime/1/upcoming`;\nconst seasonAnime = `season/2019/fall`;\n// const genreAnime = `enre/anime/1/1`\n\nexport const getSearchAnimes = async ( anime ) => {\n\n  // const animeUpper = anime.toUpperCase();\n  // debugger\n  try {\n    if(anime !== '') {\n      const response = await fetch(`${ MAIN_URL }${searchAnime}${anime}`, myCredentials);\n      // debugger\n      // const response = await fetch(`${ MAIN_URL }${searchAnime}${encodeURIComponent(anime)}`, myCredentials);\n      const { results } = await response.json();\n      // debugger\n      const animeSearch = await results.map(anime => {\n        return {\n          title: anime.title,\n          description: anime.synopsis,\n          img: anime?.image_url,\n          type: anime.type,\n          episodes: anime.episodes,\n          url: anime.url\n        }\n      })\n  \n      // const top10 = animeSearch.slice(0,9);\n      return animeSearch\n    } \n  } catch (error) {\n    // console.error(`need to try again ${error}`)\n    return anime\n  }\n  // return anime\n\n}\n\nexport const getTopAnimes = async () => {\n  const topAnimeResponse = await fetch(`${MAIN_URL}${top10Animes}`, myCredentials);\n  const { top } = await topAnimeResponse.json()\n  // debugger\n  const animeTop = top.map(anime => {\n    return {\n      id: anime.mal_id,\n      title: anime.title,\n      image: anime.image_url,\n      url: anime.url\n    }\n  })\n\n\n  return animeTop\n}\n\nexport const getSeasonAnimes = async () => {\n  const responseSeasonAnime = await fetch(`${MAIN_URL}${seasonAnime}`, myCredentials);\n  const { anime } = await responseSeasonAnime.json();\n  const animesSeason = anime.slice(0,20)\n\n  const animeData = animesSeason.map(anime => {\n    return {\n      id: anime.mal_id,\n      title: anime.title,\n      score: anime.score,\n      image: anime.image_url,\n      genre: anime.genres,\n      synopsis: anime.synopsis,\n      type: anime.type,\n      url: anime.url,\n      episodes: anime.episodes\n    }\n  })\n\n\n  return animeData\n}\n\nexport const getGenreAnimes = async () => {\n\n  let genreAnimes = [];\n  let animeByGenre = [];\n\n  const repsTest = await fetch(`${MAIN_URL}genre/anime/1/`, myCredentials);\n  const myData = await repsTest.json();\n  // debugger\n\n  try {\n      for (let i = 1; i < 3; i ++) {\n      const response = await fetch(`${MAIN_URL}genre/anime/${i}/1`,myCredentials);\n\n      const data = await response.json();\n      genreAnimes.push(data)\n      // return {\n        //   genreTitle: ,\n        //   animesByGenre: anime\n        // }\n        // debugger\n        // return [...name]\n        // animeByGenre = [...anime];\n        \n        // genreAnimes = [genreAnimes, ...name]\n        // debugger\n      }\n    } catch (error) {\n      console.error('data not found')\n    }\n    // console.log(genreAnimes)\n    // debugger\n    // return [genreAnimes, animeByGenre];\n    // return genreAnimes\n    // const getAnimeGenre = genreAnimes.map(category => {\n      //   // debugger\n      //   return category\n      // });\n      \n      // debugger\n      // const getAnimeByGenre = animeByGenre.map(category => {\n        //   return {\n          //     // name:\n          //   }\n          // })\n          // return getAnimeGenre;\n          // debugger\n          return genreAnimes\n        }\n        \n        // getGenreAnimes();","import { useEffect, useState } from \"react\";\nimport {  getSearchAnimes, getTopAnimes, getSeasonAnimes, getGenreAnimes } from '../helpers/getFetch';\n\nexport const useFetchAnime = ( animes ) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  });\n\n  useEffect(() => {\n    getSearchAnimes(animes)\n      .then(anime => {\n        setState({\n          data: anime,\n          loading: false\n        })\n      })\n  }, [animes])\n\n  return state\n}\n\nexport const useFetchTopAnime = () => {\n  // debugger\n  const [state, setState] = useState({\n    topData: [],\n    loading: true\n  });\n\n  useEffect(() => {\n    getTopAnimes()\n      .then(img => {\n        // debugger\n        setState({\n          topData: img,\n          loading: false\n        })\n      })\n  }, [ ])\n\n  return state\n}\nexport const useFetchSeasonAnime = () => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  });\n\n  useEffect(() => {\n    getSeasonAnimes()\n      .then(anime => {\n        setState({\n          data: anime,\n          loading: false\n        })\n      })\n    }, [  ])\n    \n    // debugger\n  return state\n}\n\nexport const useFetchGenreAnime = () => {\n  const [state, setState] = useState({\n    genreData: [],\n    loading: true\n  });\n\n  useEffect(() => {\n    getGenreAnimes()\n      .then(genre => {\n        // debugger\n        setState({\n          genreData: genre,\n          loading: false\n        })\n      })\n  }, [])\n\n  return state\n}","import  { useState } from 'react'\n\nexport const useShowContent = ( initialState = false ) => {\n  \n  const [showContent, setShowContent] = useState( initialState )\n\n  const toggleShowContent = () => {\n    showContent ? setShowContent(false) : setShowContent(true);\n  }\n\n  return [showContent, toggleShowContent]\n}\n","import React from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n// LazyLoadImage\nexport const InfoCard = ( anime ) => {\n\n    const {\n    id,\n    title,\n    score,\n    image,\n    genre,\n    synopsis,\n    type,\n    url,\n    episodes\n  } = anime;\n\n  return (\n    <section className=\"info__card\">\n      \n      <figure className=\"info__card__img\">\n        <LazyLoadImage src={image} alt={title}/>\n        <h3>{ title }</h3>\n      </figure>\n      <hr/>\n      \n      <p className=\"info--synopsis\">{ synopsis }</p>\n    </section>\n  )\n}\n","import React, { useState } from 'react';\nimport Modal from 'react-modal'\nimport { VscLinkExternal } from 'react-icons/vsc';\nimport { useShowContent } from '../../hooks/useShowContent';\nimport { IoCloseOutline } from 'react-icons/io5';\n\nimport './feature-styles.css';\nimport { InfoCard } from './InfoCard';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nexport const AnimeItem = (anime) => {\n\n  const [showContent, toggleShowContent] = useShowContent();\n// LazyLoadImage\n\n  // const [open, setOpen] = useState(false)\n\n  const {\n      id,\n      title,\n      image,\n      episodes\n    } = anime;\n\n\n  const shortName = title.slice(0,15)\n  return (\n    <li className=\"anime__item\">\n      <div className=\"feature__content\">\n        <LazyLoadImage src={image} alt={title} loading=\"lazy\" />\n        <div>\n          <p className=\"feature--title\">{ shortName }...</p>\n          <p className=\"feature--synopsis\">Episodes: <small>{ episodes }</small></p>\n        </div>\n      </div>\n      <VscLinkExternal  \n        className=\"feature--info\"\n        onClick={() => toggleShowContent(showContent)}\n      />\n\n      <Modal \n        ariaHideApp={false}\n        className=\"Modal\"\n        overlayClassName=\"Overlay\"\n        isOpen={showContent}>\n          \n          <div className=\"Modal--close\">\n            <IoCloseOutline\n              className=\"IoCloseOutline\"\n              onClick={() => toggleShowContent(showContent)}\n            />\n          </div>  \n          <InfoCard open={ toggleShowContent } {...anime}/> \n\n      </Modal>\n    </li>\n  )\n}\n","import React from 'react'\nimport { useFetchSeasonAnime } from '../../hooks/useFetchAnime';\nimport { AnimeItem } from './AnimeItem';\n\nimport './feature-styles.css';\nexport const FeatureAnimes = () => {\n  const { data:animeSeason, loading } = useFetchSeasonAnime()\n  return (\n    <section className=\"feature__anime\">\n      <h2>Feature</h2>\n      <ul className=\"feature__anime__list\">\n        {\n            animeSeason.map(anime => \n              (<AnimeItem  key={anime.id} {...anime}/>)\n            )\n        }\n      </ul>\n    </section>\n  )\n}\n","import React, { useState } from 'react'\n\nexport const SearchInput = ({ setAnime }) => {\n\n  const [inputValue, setInputValue] = useState('')\n  // const inputValueUpper = inputValue.toUpperCase()\n  \n  const handleInputChange = (e) => {\n    setInputValue(e.target.value)\n\n  }\n  \n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if(inputValue.trim().length > 0) {\n      // debugger\n      \n      setAnime(animes => [inputValue, ...animes]);\n      // debugger\n      setInputValue('');\n    }\n  }\n  \n  return (\n    <form className=\"search__form\" onSubmit={ handleSubmit }>\n        <input \n          type=\"text\"\n          className=\"search--input\"\n          value={ inputValue }\n          onChange={ handleInputChange }\n        />\n        <button type=\"submit\">Go</button>\n    </form>\n  )\n}\n","import React from 'react'\n\nexport const AbcChart = () => {\n\n  let abc = []\n  for(let i = 65; i <= 90; i++) {\n    let pushAbc = abc.push(String.fromCharCode(i))\n  }\n\n  // debugger\n  return (\n      <ul className=\"abc__chart\">\n        {\n          abc.map(letter => (\n            <li key={letter} className=\"abc--letter\">{letter}</li>\n          ))\n        }\n      </ul>\n\n  )\n}\n","import React, { useState } from 'react'\nimport { CategoryPage } from '../pages/CategoryPage'\n// import { useFetchGenreAnime } from '../../hooks/useFetchAnime'\n\nexport const AnimeGenreItem = ({genreData}) =>{\n  const [state, setState] = useState(genreData)\n  // const { genreTitle } = genreData\n  const handleShowInfo = ( anime, name ) => {\n    setState(anime)\n    console.log(name)\n    console.log(anime)\n  }\n  // debugger\n  return (\n    <ul className=\"genre__list\">\n      {\n        genreData.map(({mal_url:{name, mal_id}, anime}) => (\n            <li \n            key={mal_id} \n            className=\"genre--item\"\n            onClick={() => handleShowInfo(anime, name)}\n            >{ name }</li>\n            // <CategoryPage />\n        ))\n      }\n      {/* {\n        genreData.map((genre, i) => (\n          // const {mal_url:{name}} = genre;\n        ))\n      } */}\n    </ul>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { IoReorderFourSharp as MenuIcon, IoSearchOutline, IoCloseOutline as CloseIcon} from 'react-icons/io5';\n\nimport { useFetchAnime, useFetchGenreAnime, useFetchTopAnime } from '../../hooks/useFetchAnime';\nimport { useShowContent } from '../../hooks/useShowContent';\n\n\nimport './menu.css'\nimport { SearchInput } from './SearchInput';\nimport { AbcChart } from './AbcChart';\nimport { AnimeGenreItem } from './AnimeGenreItem';\n\n\nexport const NavbarMenu = () => {\n\n\n  const [showContent, toggleShowContent] = useShowContent();\n  const [anime, setAnime] = useState('');\n  const { data, loading } = useFetchAnime(anime);\n  const { genreData } = useFetchGenreAnime();\n\n  // debugger\n  useEffect(() => {\n    \n  }, [anime])\n\n  useEffect(() => {\n\n  }, [ genreData ])\n  console.log(data)\n  \n  return (\n    <header  >\n      <nav className=\"menu__nav container\">\n        <h3>AnimeApp</h3>\n        <div className=\"right__side__container\">\n\n            \n            <MenuIcon \n              className=\"menu--icons\"\n              onClick={ () => toggleShowContent(showContent)}\n            /> \n\n            <Modal\n              ariaHideApp={ false }\n              className=\"menu__modal\"\n              overlayClassName=\"menu__overlay\"\n              isOpen={ showContent }\n            > \n              <CloseIcon className=\"menu--icons\" onClick={ () => toggleShowContent(showContent)}/>\n\n              <SearchInput setAnime={ setAnime }/>\n\n              <AbcChart/>\n              <AnimeGenreItem genreData={ genreData }/>\n            </Modal>\n        </div>\n      </nav>\n      {/* {\n        showContent && < SearchInput setAnime={ setAnime }/>\n      } */}\n    </header>\n  )\n}\n","import React from 'react'\nimport { useFetchTopAnime } from '../../hooks/useFetchAnime'\n\nimport './hero-styles.css';\n\nconst randomBackground = Math.floor(Math.random() * 50) + 1;\nexport const Hero = () => {\n  const {topData, loading} = useFetchTopAnime()\n  const {image, title, url} = !!topData[randomBackground] && topData[randomBackground]\n  // debugger\n  return (\n    <main className=\"hero\">\n      <img src={image} alt=\"\"/>\n      \n      <div>\n        <h3>{title}</h3>\n        <a href={url} target=\"_blank\">\n          <button className=\"watch--now\" >Watch Now</button>\n        </a>\n\n      </div>\n    </main>\n  )\n}\n","import React from 'react'\nimport { LazyLoadImage, trackWindowScroll } from 'react-lazy-load-image-component'\nimport { useFetchTopAnime } from '../../hooks/useFetchAnime';\nimport { useShowContent } from '../../hooks/useShowContent';\nimport './top-10-styles.css';\n\nexport const Top10Anime = ( direction = 'horizontal' ) => {\n  const {topData, loading} = useFetchTopAnime();\n  const [showContent, toggleShowContent] = useShowContent()\n  // const top10 = topData.slice(0,10);\n  return (\n    <section className=\"top10\">\n      <h2>Top 10 Anime</h2>\n      <ul className=\"top10__list\">\n        {\n          topData.map(({title, image, url, id}, index) => (\n            <li \n              key={id} \n              className=\"top10__list__item\"\n            >\n              <p>{index + 1}</p>\n              <LazyLoadImage \n                src={image}\n                alt={title}\n                effect=\"opacity\"\n                scrollPosition={ direction }\n              />\n            </li>\n          )\n          )\n        }\n      </ul>\n    </section>\n  )\n}\n","import React from 'react';\nimport { FeatureAnimes } from './components/feature/FeatureAnimes';\nimport { NavbarMenu } from './components/header/NavbarMenu';\nimport { Hero } from './components/hero/Hero';\nimport { Top10Anime } from './components/top10/Top10Anime';\n\nimport './main-styles.css'\n\n\nexport const AnimeApp = () => {\n  // debugger\n  return (\n    <>\n      <NavbarMenu />\n      <Hero />\n      <Top10Anime />\n      <FeatureAnimes />\n    </>\n\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { AnimeApp } from './AnimeApp';\n\nimport './main-styles.css';\n\n\nReactDOM.render( <AnimeApp />, document.getElementById('root'));"],"sourceRoot":""}